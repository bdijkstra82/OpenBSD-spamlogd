--- libexec/spamlogd/spamlogd.c.orig	Wed Mar 16 15:47:04 2016
+++ libexec/spamlogd/spamlogd.c	Wed Oct 19 10:28:33 2016
@@ -21,7 +21,7 @@
  * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
  */
 
-/* watch pf log for mail connections, update whitelist entries. */
+/* watch pf log for mail connections, update spamdb entries. */
 
 #include <sys/types.h>
 #include <sys/socket.h>
@@ -76,13 +76,14 @@
 pcap_t			*hpcap = NULL;
 struct syslog_data	 sdata	= SYSLOG_DATA_INIT;
 time_t			 whiteexp = WHITEEXP;
+time_t			 trapexp = TRAPEXP;
 extern char		*__progname;
 
 void	logmsg(int , const char *, ...);
 void	sighandler_close(int);
 int	init_pcap(void);
 void	logpkt_handler(u_char *, const struct pcap_pkthdr *, const u_char *);
-int	dbupdate(char *, char *);
+int	dbupdate(char *, char *, int);
 __dead void	usage(void);
 
 void
@@ -188,16 +189,15 @@
 	}
 
 	if (ipstraddr[0] != '\0') {
-		if (hdr->dir == PF_IN)
-			logmsg(LOG_DEBUG,"inbound %s", ipstraddr);
-		else 
-			logmsg(LOG_DEBUG,"outbound %s", ipstraddr);
-		dbupdate(PATH_SPAMD_DB, ipstraddr);
+		logmsg(LOG_DEBUG, "%s %s", 
+		    hdr->dir == PF_IN ? "inbound" : "outbound",
+		    ipstraddr);
+		dbupdate(PATH_SPAMD_DB, ipstraddr, hdr->dir);
 	}
 }
 
 int
-dbupdate(char *dbname, char *ip)
+dbupdate(char *dbname, char *ip, int dir)
 {
 	HASHINFO	hashinfo;
 	DBT		dbk, dbd;
@@ -206,6 +206,7 @@
 	time_t		now;
 	int		r;
 	struct in_addr	ia;
+	int 		action = 0;	/* 0=NOP, 1=white, 2=trap */
 
 	now = time(NULL);
 	memset(&hashinfo, 0, sizeof(hashinfo));
@@ -224,7 +225,7 @@
 	dbk.data = ip;
 	memset(&dbd, 0, sizeof(dbd));
 
-	/* add or update whitelist entry */
+	/* add or update entry */
 	r = db->get(db, &dbk, &dbd, 0);
 	if (r == -1) {
 		logmsg(LOG_NOTICE, "db->get failed (%m)");
@@ -233,21 +234,13 @@
 
 	if (r) {
 		/* new entry */
-		memset(&gd, 0, sizeof(gd));
-		gd.first = now;
-		gd.bcount = 1;
-		gd.pass = now;
-		gd.expire = now + whiteexp;
-		memset(&dbk, 0, sizeof(dbk));
-		dbk.size = strlen(ip);
-		dbk.data = ip;
-		memset(&dbd, 0, sizeof(dbd));
-		dbd.size = sizeof(gd);
-		dbd.data = &gd;
-		r = db->put(db, &dbk, &dbd, 0);
-		if (r) {
-			logmsg(LOG_NOTICE, "db->put failed (%m)");
-			goto bad;
+		if (dir == PF_OUT)  {
+			memset(&gd, 0, sizeof(gd));
+			gd.first = now;
+			gd.pass = now;
+			gd.expire = now + whiteexp;
+			gd.bcount = 1;
+			action = 1;
 		}
 	} else {
 		/* XXX - backwards compat */
@@ -256,8 +249,17 @@
 			db->del(db, &dbk, 0);
 			goto bad;
 		}
-		gd.pcount++;
-		gd.expire = now + whiteexp;
+		if (dir == PF_OUT || gd.pcount >= 0) {
+			gd.expire = now + whiteexp;
+			gd.pcount++;
+			action = 1;
+		} else {
+			gd.expire = now + trapexp;
+			gd.bcount++;
+			action = 2;
+		}
+	}
+	if (action != 0) {
 		memset(&dbk, 0, sizeof(dbk));
 		dbk.size = strlen(ip);
 		dbk.data = ip;
@@ -272,8 +274,12 @@
 	}
 	db->close(db);
 	db = NULL;
-	if (syncsend)
-		sync_white(now, now + whiteexp, ip);
+	if (syncsend) {
+		if (action == 1)
+			sync_white(now, gd.expire, ip);
+		else if (action == 2)
+			sync_trapped(now, gd.expire, ip);
+	}
 	return (0);
  bad:
 	db->close(db);
@@ -286,7 +292,7 @@
 {
 	fprintf(stderr,
 	    "usage: %s [-DI] [-i interface] [-l pflog_interface] "
-	    "[-W whiteexp] [-Y synctarget]\n",
+	    "[-W whiteexp] [-T trapexp] [-Y synctarget]\n",
 	    __progname);
 	exit(1);
 }
@@ -310,7 +316,7 @@
 		errx(1, "Can't find service \"spamd-sync\" in /etc/services");
 	sync_port = ntohs(ent->s_port);
 
-	while ((ch = getopt(argc, argv, "DIi:l:W:Y:")) != -1) {
+	while ((ch = getopt(argc, argv, "DIi:l:T:W:Y:")) != -1) {
 		switch (ch) {
 		case 'D':
 			flag_debug = 1;
@@ -323,6 +329,14 @@
 			break;
 		case 'l':
 			pflogif = optarg;
+			break;
+		case 'T':
+			/* limit trapexp to 2160 hours (90 days) */
+			trapexp = strtonum(optarg, 1, (24 * 90), &errstr);
+			if (errstr)
+				usage();
+			/* convert to seconds from hours */
+			trapexp *= (60 * 60);
 			break;
 		case 'W':
 			/* limit whiteexp to 2160 hours (90 days) */
--- libexec/spamlogd/spamlogd.8.orig	Sun Sep 15 22:02:34 2013
+++ libexec/spamlogd/spamlogd.8	Wed Oct 19 10:26:30 2016
@@ -19,12 +19,13 @@
 .Os
 .Sh NAME
 .Nm spamlogd
-.Nd spamd whitelist updating daemon
+.Nd spamd database updating daemon
 .Sh SYNOPSIS
 .Nm spamlogd
 .Op Fl DI
 .Op Fl i Ar interface
 .Op Fl l Ar pflog_interface
+.Op Fl T Ar trapexp
 .Op Fl W Ar whiteexp
 .Op Fl Y Ar synctarget
 .Sh DESCRIPTION
@@ -40,13 +41,14 @@
 whitelist entries whenever a connection
 to port 25 is logged to the
 .Xr pflog 4
-interface.
-The source addresses of inbound connections are whitelisted
+interface, and existing trapped entries whenever a connection
+to port 8025 is logged.
+The source addresses of inbound connections are added or updated
 when seen by
 .Nm
 to ensure that their entries in
 .Pa /var/db/spamd
-do not expire if the connecting host continues to send legitimate mail.
+do not expire if the connecting host continues to connect.
 The destination addresses of outbound connections are whitelisted
 when seen by
 .Nm
@@ -64,10 +66,10 @@
 .It Fl I
 Specify that
 .Nm
-is only to whitelist inbound SMTP connections.
+is only to add or update inbound connections.
 By default
 .Nm
-will whitelist the source of inbound SMTP connections, and the
+will add or update the source of inbound connections, and the
 target of outbound SMTP connections.
 .It Fl i Ar interface
 Specify a network interface on which packets must arrive.
@@ -78,6 +80,12 @@
 interface to listen for connection notifications.
 The default is to watch for connections logged on
 .Dq pflog0 .
+.It Fl T Ar trapexp
+Adjust the time for
+.Ar trapexp
+in hours.
+The default is 24 hours (one day); maximum is 2160 hours
+(approximately 90 days).
 .It Fl W Ar whiteexp
 Adjust the time for
 .Ar whiteexp
@@ -95,6 +103,9 @@
 MTA in order for
 .Nm
 to update the whitelist entries.
+In order to update the trapped entries, log incoming connections to the
+.Xr spamd 8
+daemon.
 See
 .Xr spamd 8
 for an example ruleset for logging such connections.
